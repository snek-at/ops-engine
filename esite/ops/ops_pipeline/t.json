{'raw_data': '{
    "Git": {
      "git_url": "https://github.com/snek-at/intel.git\\n"
    },
    "Log": [
      {
        "commit": "9460ac93f0fa6877ef1d8459481dff71ae224891",
        "author": "schettn \\u003cnicoschett@icloud.com\\u003e",
        "date": "Tue Apr 7 20:49:17 2020 +0200",
        "message": "Add-licence-tag",
        "files": [
          {
            "insertions": "5",
            "deletions": "0",
            "path": "src/utils/gitlab/paths.ts",
            "raw_changes": "\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © Simon Prast\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"
          }
        ]
      },
      {
        "commit": "f9904a698735d20d86512adcfc6396d13972b6bb",
        "author": "schettn \\u003cnicoschett@icloud.com\\u003e",
        "date": "Tue Apr 7 20:47:00 2020 +0200",
        "message": "Add-documentation",
        "files": [
          {
            "insertions": "10",
            "deletions": "1",
            "path": "src/utils/github/converter.ts",
            "raw_changes": "\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Imports\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains all reducer database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains momentJS\\u001b[m\\n\\u001b[31m-function run(models: any, rawData: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Converter for data from the github api.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m *\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * @param rawData\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * @description Fill the database with data provided by \\"rawData\\".\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mfunction run(rawData: any) {\\u001b[m\\n"
          }
        ]
      },
      {
        "commit": "ecaa238aa399425e91205a54e839eb9b679c5ba1",
        "author": "schettn \\u003cnicoschett@icloud.com\\u003e",
        "date": "Tue Apr 7 20:46:36 2020 +0200",
        "message": "Remove-models-as-argument-for-the-converter",
        "files": [
          {
            "insertions": "1",
            "deletions": "1",
            "path": "src/index.ts",
            "raw_changes": "\\u001b[31m-      github.converter.run(models, data);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      github.converter.run(data);\\u001b[m\\n"
          },
          {
            "insertions": "1",
            "deletions": "0",
            "path": "src/utils/github/converter.ts",
            "raw_changes": "\\u001b[32m+\\u001b[m\\u001b[32mimport * as models from \\"../../reducer/database/models\\";\\u001b[m\\n"
          }
        ]
      },
      {
        "commit": "d701545b8cd9f04f050fe8de377594edf073bc08",
        "author": "schettn \\u003cnicoschett@icloud.com\\u003e",
        "date": "Tue Apr 7 20:43:36 2020 +0200",
        "message": "Rework-whole-implement-1",
        "files": [
          {
            "insertions": "14",
            "deletions": "4",
            "path": "package.json",
            "raw_changes": "\\u001b[32m+\\u001b[m\\u001b[32m  \\"main\\": \\"lib/index.js\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  \\"types\\": \\"lib/index.d.ts\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  \\"files\\": [\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"lib\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  ],\\u001b[m\\n\\u001b[31m-  \\"main\\": \\"src/index.js\\",\\u001b[m\\n\\u001b[31m-    \\"react-scripts\\": \\"^3.3.1\\",\\u001b[m\\n\\u001b[31m-    \\"snek-client\\": \\"1.0.0\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"apollo-boost\\": \\"^0.4.7\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"graphql\\": \\"^14.6.0\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"moment\\": \\"^2.24.0\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"react-scripts\\": \\"^3.4.1\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"snek-client\\": \\"file:../client\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"typescript\\": \\"^3.8.3\\"\\u001b[m\\n\\u001b[31m-  \\"prettier\\": { \\"arrowParens\\": \\"always\\" }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  \\"prettier\\": {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"arrowParens\\": \\"always\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n"
          },
          {
            "insertions": "0",
            "deletions": "28",
            "path": "src/client.js",
            "raw_changes": "\\u001b[31m-//\\u003e snek-client\\u001b[m\\n\\u001b[31m-// A Graphql and REST client for fetching data\\u001b[m\\n\\u001b[31m-import { Graphql } from \\"snek-client\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Classes\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * Implementation of the snek-client\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class Github{\\u001b[m\\n\\u001b[31m-    constructor(authorization){\\u001b[m\\n\\u001b[31m-        var url = \\"https: //api.github.com/graphql\\";\\u001b[m\\n\\u001b[31m-        let client = new Graphql(url, {\\u001b[m\\n\\u001b[31m-            headers: {\\u001b[m\\n\\u001b[31m-                authorization\\u001b[m\\n\\u001b[31m-            }\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-        this.get = async (query, variables) =\\u003e client.send(query, variables);\\u001b[m\\n\\u001b[31m-    }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-export {\\u001b[m\\n\\u001b[31m-    Github\\u001b[m\\n\\u001b[31m-};\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[31m- * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n"},{"insertions":"0","deletions":"83","path":"src/index.js","raw_changes":"\\u001b[31m-//\\u003e Reducer\\u001b[m\\n\\u001b[31m-// Contains Reducer and database models\\u001b[m\\n\\u001b[31m-import { Reducer, models } from \\"./reducer\\";\\u001b[m\\n\\u001b[31m-//\\u003e snek-client\\u001b[m\\n\\u001b[31m-// Contains a interface for the snek-client\\u001b[m\\n\\u001b[31m-import * as client from \\"./client\\";\\u001b[m\\n\\u001b[31m-//\\u003e Utils\\u001b[m\\n\\u001b[31m-// Contains the github utils\\u001b[m\\n\\u001b[31m-import * as github from \\"./utils/github\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Classes\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * The intel. A place where everything becomes one thing.\\u001b[m\\n\\u001b[31m- * By using the snek-client, utils and the brand new snek-reducer we\\u001b[m\\n\\u001b[31m- * created a new way of life.\\u001b[m\\n\\u001b[31m- * Some might say that this is not perfect in every way. But they are just fools.\\u001b[m\\n\\u001b[31m- * We know every single mistake, every single scratch.\\u001b[m\\n\\u001b[31m- * Although we can frankly say, we love it!\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class Intel {\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    let reducer = new Reducer();\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    this.append = async (source) =\\u003e {\\u001b[m\\n\\u001b[31m-      if (source.platform.toLowerCase() === \\"github\\") {\\u001b[m\\n\\u001b[31m-        // Init github client\\u001b[m\\n\\u001b[31m-        let c = new client.Github(source.authorization);\\u001b[m\\n\\u001b[31m-        let profileData = await c.get(github.queries.profile(), {\\u001b[m\\n\\u001b[31m-          username: source.user\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-        let calendarData = await c.get(\\u001b[m\\n\\u001b[31m-          github.queries.calendar(profileData.data.user),\\u001b[m\\n\\u001b[31m-          {\\u001b[m\\n\\u001b[31m-            username: source.user\\u001b[m\\n\\u001b[31m-          }\\u001b[m\\n\\u001b[31m-        );\\u001b[m\\n\\u001b[31m-        const data = {\\u001b[m\\n\\u001b[31m-          profile: profileData.data.user,\\u001b[m\\n\\u001b[31m-          calendar: calendarData.data.user\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        github.converter.run(models, data);\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.appendList = async (sourceList) =\\u003e {\\u001b[m\\n\\u001b[31m-      const errorList = [];\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-      async function retry(maxRetries, fn, params) {\\u001b[m\\n\\u001b[31m-        return await fn(...params).catch(() =\\u003e {\\u001b[m\\n\\u001b[31m-          if (maxRetries \\u003c= 0) {\\u001b[m\\n\\u001b[31m-            throw new Error(\\u001b[m\\n\\u001b[31m-              `Could not fetch data after ${maxRetries} retries... Please try again later!`\\u001b[m\\n\\u001b[31m-            );\\u001b[m\\n\\u001b[31m-          }\\u001b[m\\n\\u001b[31m-          return retry(maxRetries - 1, fn, params);\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-      for (let index = 0; index \\u003c sourceList.length; index++) {\\u001b[m\\n\\u001b[31m-        const source = sourceList[index];\\u001b[m\\n\\u001b[31m-        const maxRetries = 5;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        await retry(maxRetries, this.append, [source]).catch(() =\\u003e {\\u001b[m\\n\\u001b[31m-          errorList.push(source);\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-      if (errorList.length \\u003e 0) {\\u001b[m\\n\\u001b[31m-        throw errorList;\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.get = () =\\u003e {\\u001b[m\\n\\u001b[31m-      return reducer.get();\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-export { Intel };\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[31m- * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n"},{"insertions":"115","deletions":"0","path":"src/index.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Reducer\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains Reducer and database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport { Reducer, models } from \\"./reducer\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e snek-client\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains a interface for the snek-client\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//import * as client from \\"./client\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport { SnekClient, GithubClient } from \\"snek-client\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Utils\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains the github utils\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as github from \\"./utils/github/index\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport { IProfile } from \'./utils/github/queries/index\';\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface IReducedData {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  profile: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  calendar: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  statistic: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  language: object\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface IIntel {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  snekclient: SnekClient;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  append(source: ISource): Promise\\u003cvoid\\u003e;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  appendList?(sources: ISource[]): Promise\\u003cvoid\\u003e;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  get(): IReducedData;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface ISource {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  user: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  platform: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    url: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    name: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  authorization: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface IDataUser {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  data: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    user: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface IData {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  profile: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  calendar: object;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Classes\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * The intel. A place where everything becomes one thing.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * By using the snek-client, utils and the brand new snek-reducer we\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * created a new way of life.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Some might say that this is not perfect in every way. But they are just fools.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * We know every single mistake, every single scratch.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Although we can frankly say, we love it!\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport class Intel implements IIntel {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  public snekclient: SnekClient;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  private reducer: Reducer;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     * Init clients\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    this.snekclient = new SnekClient();\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    this.reducer = new Reducer();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  async append(source: ISource) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let platform = source.platform.name.toLowerCase();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    if (platform === \\"github\\") {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // Init github client\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let githubClient = new GithubClient(source.platform.url);\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let profileData = \\u003cIDataUser\\u003eawait githubClient.endpoint.send(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        source.authorization,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        github.queries.profile(),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          username: source.user\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      );\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let calendarData = \\u003cIDataUser\\u003eawait githubClient.endpoint.send(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        source.authorization,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        github.queries.calendar(\\u003cIProfile\\u003eprofileData.data.user),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          username: source.user\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      );\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      const data: IData = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        profile: profileData.data.user,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        calendar: calendarData.data.user\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      github.converter.run(models, data);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  async appendList(sources: ISource[]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let source in sources) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      await this.append(sources[source])\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  get() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return \\u003cIReducedData\\u003ethis.reducer.get();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"},{"insertions":"1","deletions":"0","path":"src/react-app-env.d.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m/// \\u003creference types=\\"react-scripts\\" /\\u003e\\u001b[m\\n"},{"insertions":"23","deletions":"24","path":"src/reducer/database/helper/{calendar.js =\\u003e calendar.ts}","raw_changes":""},{"insertions":"3","deletions":"4","path":"src/reducer/database/helper/{general.js =\\u003e general.ts}","raw_changes":""},{"insertions":"0","deletions":"2","path":"src/reducer/database/helper/{index.js =\\u003e index.ts}","raw_changes":""},{"insertions":"32","deletions":"19","path":"src/reducer/database/helper/{statistic.js =\\u003e statistic.ts}","raw_changes":""},{"insertions":"245","deletions":"186","path":"src/reducer/database/{models.js =\\u003e models.ts}","raw_changes":""},{"insertions":"0","deletions":"2","path":"src/reducer/database/osm/{index.js =\\u003e index.ts}","raw_changes":""},{"insertions":"0","deletions":"708","path":"src/reducer/database/osm/models.js","raw_changes":"\\u001b[31m-//\\u003e Reconstructor\\u001b[m\\n\\u001b[31m-// SOAssambler for SO objects\\u001b[m\\n\\u001b[31m-import { SOAssambler } from \\"./reconstructor\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Statements\\u001b[m\\n\\u001b[31m-// Contains SQL statements\\u001b[m\\n\\u001b[31m-import * as platform from \\"./statements/platform\\";\\u001b[m\\n\\u001b[31m-import * as member from \\"./statements/member\\";\\u001b[m\\n\\u001b[31m-import * as repository from \\"./statements/repository\\";\\u001b[m\\n\\u001b[31m-import * as repositoryHasMember from \\"./statements/repositoryHasMember\\";\\u001b[m\\n\\u001b[31m-import * as platformHasRepository from \\"./statements/platformHasRepository\\";\\u001b[m\\n\\u001b[31m-import * as language from \\"./statements/language\\";\\u001b[m\\n\\u001b[31m-import * as organization from \\"./statements/organization\\";\\u001b[m\\n\\u001b[31m-import * as organizationHasMember from \\"./statements/organizationHasMember\\";\\u001b[m\\n\\u001b[31m-import * as platformHasOrganization from \\"./statements/platformHasOrganization\\";\\u001b[m\\n\\u001b[31m-import * as statistic from \\"./statements/statistic\\";\\u001b[m\\n\\u001b[31m-import * as streak from \\"./statements/streak\\";\\u001b[m\\n\\u001b[31m-import * as calendar from \\"./statements/calendar\\";\\u001b[m\\n\\u001b[31m-import * as contribution from \\"./statements/contribution\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-// Statement Objects =\\u003e SO\\u001b[m\\n\\u001b[31m-import * as helper from \\"../helper\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Classes\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A general underlying statement object on which\\u001b[m\\n\\u001b[31m- * all statement objects are based.\\u001b[m\\n\\u001b[31m- * SOAssembler and squeezer are provided.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  static getObjects(self) {\\u001b[m\\n\\u001b[31m-    return new SOAssambler(self);\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  render(filter) {\\u001b[m\\n\\u001b[31m-    return helper.general.squeezer(this, filter);\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to platform\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class PlatformSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = platform;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  static getLowestCreatedAtYear() {\\u001b[m\\n\\u001b[31m-    return SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-      PlatformSO.statements.lowestCreatedAtYear\\u001b[m\\n\\u001b[31m-    )[0];\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Abstract Methods\\u001b[m\\n\\u001b[31m-  createRepository(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Creates a repository within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let repository = Repository.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //if (repository.success === false) {\\u001b[m\\n\\u001b[31m-    //  repository = Repository.objects.filter({\\u001b[m\\n\\u001b[31m-    //    url: fields.url\\u001b[m\\n\\u001b[31m-    //  })[0];\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //PlatformHasRepository.objects.create(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    platformId: this.id,\\u001b[m\\n\\u001b[31m-    //    repositoryId: repository.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Repository\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return repository;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  createOrganization(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Creates a organization within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let organization = Organization.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //if (organization.success === false) {\\u001b[m\\n\\u001b[31m-    //  organization = Organization.objects.filter({\\u001b[m\\n\\u001b[31m-    //    url: fields.url\\u001b[m\\n\\u001b[31m-    //  })[0];\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //PlatformHasOrganization.objects.create(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    platformId: this.id,\\u001b[m\\n\\u001b[31m-    //    organizationId: organization.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Organization\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return organization;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  createStatistic(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Creates a statistic within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //fields.platformId = this.id;\\u001b[m\\n\\u001b[31m-    //let statistic = Statistic.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return statistic;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  createCalendarEntry(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Creates a calendar entry within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //fields.platformId = this.id;\\u001b[m\\n\\u001b[31m-    //let calendar = Calendar.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return calendar;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getRepositories() {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get all repositories within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let repositories = PlatformHasRepository.objects.filter(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    platformId: this.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Repository\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return repositories;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getOrganizations() {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get all organizations within a platform.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let organizations = PlatformHasOrganization.objects.filter(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    platformId: this.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Organization\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return organizations;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getCalendar(dates) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get merged calendar\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //Calendar.getCalendar(dates);\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to member\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class MemberSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  static statements = member;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to repository\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class RepositorySO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = repository;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  getLanguages(cls, self) {\\u001b[m\\n\\u001b[31m-    let response = cls.objects.custom(language.byRepository(self.id));\\u001b[m\\n\\u001b[31m-    return response;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Abstract Methods\\u001b[m\\n\\u001b[31m-  createMember(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Create a member within a repository.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let member = Member.objects.create({\\u001b[m\\n\\u001b[31m-    //  avatarUrl: fields.avatarUrl,\\u001b[m\\n\\u001b[31m-    //  url: fields.url,\\u001b[m\\n\\u001b[31m-    //  fullname: fields.fullname,\\u001b[m\\n\\u001b[31m-    //  username: fields.username,\\u001b[m\\n\\u001b[31m-    //  platformId: fields.platformId\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //if (member.success === false) {\\u001b[m\\n\\u001b[31m-    //  member = Member.objects.filter({\\u001b[m\\n\\u001b[31m-    //    username: fields.username,\\u001b[m\\n\\u001b[31m-    //    platformId: fields.platformId\\u001b[m\\n\\u001b[31m-    //  })[0];\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //RepositoryHasMember.objects.create({\\u001b[m\\n\\u001b[31m-    //  repositoryId: this.id,\\u001b[m\\n\\u001b[31m-    //  memberId: member.id\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return member;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-  createLanguage(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Create a languages within a repository.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //fields.repositoryId = this.id;\\u001b[m\\n\\u001b[31m-    //let language = Language.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return language;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getMembers() {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get all members of repository.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let members = RepositoryHasMember.objects.filter(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    repositoryId: this.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Member\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return members;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to repositoryHasMember\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class RepositoryHasMemberSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  static statements = repositoryHasMember;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to language\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class LanguageSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = language;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  static getLanguages() {\\u001b[m\\n\\u001b[31m-    return SOAssambler.database.exec(LanguageSO.statements.merged);\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to platformHasRepository\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class PlatformHasRepositorySO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = platformHasRepository;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to organization\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class OrganizationSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = organization;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  getRepositories(cls, self) {\\u001b[m\\n\\u001b[31m-    let response = cls.objects.filter(\\u001b[m\\n\\u001b[31m-      {\\u001b[m\\n\\u001b[31m-        owner: self.name\\u001b[m\\n\\u001b[31m-      },\\u001b[m\\n\\u001b[31m-      cls,\\u001b[m\\n\\u001b[31m-      repository.withOwner\\u001b[m\\n\\u001b[31m-    );\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    return response;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Abstract Methods\\u001b[m\\n\\u001b[31m-  createMember(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Create a member within a repository.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let member = Member.objects.create({\\u001b[m\\n\\u001b[31m-    //  avatarUrl: fields.avatarUrl,\\u001b[m\\n\\u001b[31m-    //  url: fields.url,\\u001b[m\\n\\u001b[31m-    //  fullname: fields.fullname,\\u001b[m\\n\\u001b[31m-    //  username: fields.username,\\u001b[m\\n\\u001b[31m-    //  platformId: fields.platformId\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //if (member.success === false) {\\u001b[m\\n\\u001b[31m-    //  member = Member.objects.filter({\\u001b[m\\n\\u001b[31m-    //    username: fields.username,\\u001b[m\\n\\u001b[31m-    //    platformId: fields.platformId\\u001b[m\\n\\u001b[31m-    //  })[0];\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //OrganizationHasMember.objects.create({\\u001b[m\\n\\u001b[31m-    //  organizationId: this.id,\\u001b[m\\n\\u001b[31m-    //  memberId: member.id\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return member;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getMembers(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get all members of a repository.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let members = OrganizationHasMember.objects.filter(\\u001b[m\\n\\u001b[31m-    //  {\\u001b[m\\n\\u001b[31m-    //    organizationId: this.id\\u001b[m\\n\\u001b[31m-    //  },\\u001b[m\\n\\u001b[31m-    //  Member\\u001b[m\\n\\u001b[31m-    //);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return members;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to organizationHasMember\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class OrganizationHasMemberSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = organizationHasMember;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to platformHasOrganization\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class PlatformHasOrganizationSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = platformHasOrganization;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to statistic\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class StatisticSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = statistic;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  static getMerged(Cls) {\\u001b[m\\n\\u001b[31m-    let response = SOAssambler.database.exec(StatisticSO.statements.allMerged);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    // Parse to class objects\\u001b[m\\n\\u001b[31m-    response = response.map((entry) =\\u003e {\\u001b[m\\n\\u001b[31m-      return new Cls(entry);\\u001b[m\\n\\u001b[31m-    });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    return response;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getContributions(self) {\\u001b[m\\n\\u001b[31m-    let response;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    if (self.id) {\\u001b[m\\n\\u001b[31m-      // If valid object\\u001b[m\\n\\u001b[31m-    } else {\\u001b[m\\n\\u001b[31m-      // maybe merged object?\\u001b[m\\n\\u001b[31m-      response = {\\u001b[m\\n\\u001b[31m-        commit: SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          StatisticSO.statements.commitContributionsOfYear,\\u001b[m\\n\\u001b[31m-          [self.year]\\u001b[m\\n\\u001b[31m-        )[0],\\u001b[m\\n\\u001b[31m-        issue: SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          StatisticSO.statements.issueContributionsOfYear,\\u001b[m\\n\\u001b[31m-          [self.year]\\u001b[m\\n\\u001b[31m-        )[0],\\u001b[m\\n\\u001b[31m-        pullRequest: SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          StatisticSO.statements.issueContributionsOfYear,\\u001b[m\\n\\u001b[31m-          [self.year]\\u001b[m\\n\\u001b[31m-        )[0],\\u001b[m\\n\\u001b[31m-        pullRequestReview: SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          StatisticSO.statements.pullRequestReviewContributionsOfYear,\\u001b[m\\n\\u001b[31m-          [self.year]\\u001b[m\\n\\u001b[31m-        )[0]\\u001b[m\\n\\u001b[31m-      };\\u001b[m\\n\\u001b[31m-    }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    return response;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Abstract Methods\\u001b[m\\n\\u001b[31m-  createStreak(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Create a streak within a statistic.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //fields.statisticId = this.id;\\u001b[m\\n\\u001b[31m-    //let streak = Streak.objects.create(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return streak;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getStreaks() {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get all streaks of a statistic.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //if (this.year || this.year === 0) {\\u001b[m\\n\\u001b[31m-    //  let { from, to } = this.getDates();\\u001b[m\\n\\u001b[31m-    //  let response = Calendar.getDaysBetweenDate(this, {\\u001b[m\\n\\u001b[31m-    //    from,\\u001b[m\\n\\u001b[31m-    //    to\\u001b[m\\n\\u001b[31m-    //  });\\u001b[m\\n\\u001b[31m-    //  response = helper.statistic.calculateStreaks(response);\\u001b[m\\n\\u001b[31m-    //  response = response.map((entry) =\\u003e {\\u001b[m\\n\\u001b[31m-    //    return new Streak(entry);\\u001b[m\\n\\u001b[31m-    //  });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //  return response;\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-    //return [];\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getBusiestDay() {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get the busiest day between the result of getDates().\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //if (this.year || this.year === 0) {\\u001b[m\\n\\u001b[31m-    //  let { from, to } = this.getDates();\\u001b[m\\n\\u001b[31m-    //  let response = Calendar.getBusiestDay({\\u001b[m\\n\\u001b[31m-    //    from,\\u001b[m\\n\\u001b[31m-    //    to\\u001b[m\\n\\u001b[31m-    //  });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //  if (response) {\\u001b[m\\n\\u001b[31m-    //    response = new Calendar(response);\\u001b[m\\n\\u001b[31m-    //  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //  return response;\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  getDates(){\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get the correct from and to date based on the year.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let from, to;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //if (this.year === 0) {\\u001b[m\\n\\u001b[31m-    //  from = moment()\\u001b[m\\n\\u001b[31m-    //    .subtract(1, \\"years\\")\\u001b[m\\n\\u001b[31m-    //    .day(0)\\u001b[m\\n\\u001b[31m-    //    .format();\\u001b[m\\n\\u001b[31m-    //  to = moment().format();\\u001b[m\\n\\u001b[31m-    //} else {\\u001b[m\\n\\u001b[31m-    //  from = moment()\\u001b[m\\n\\u001b[31m-    //    .year(this.year)\\u001b[m\\n\\u001b[31m-    //    .month(0)\\u001b[m\\n\\u001b[31m-    //    .day(0)\\u001b[m\\n\\u001b[31m-    //    .date(1)\\u001b[m\\n\\u001b[31m-    //    .format();\\u001b[m\\n\\u001b[31m-    //  to = moment()\\u001b[m\\n\\u001b[31m-    //    .year(this.year)\\u001b[m\\n\\u001b[31m-    //    .month(11)\\u001b[m\\n\\u001b[31m-    //    .day(31)\\u001b[m\\n\\u001b[31m-    //    .format();\\u001b[m\\n\\u001b[31m-    //}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return {\\u001b[m\\n\\u001b[31m-    //  from,\\u001b[m\\n\\u001b[31m-    //  to\\u001b[m\\n\\u001b[31m-    //};\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-  \\u001b[m\\n\\u001b[31m-  getStreakDetails(streaks){\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Get the current and longest streak of streaks.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let longest = {\\u001b[m\\n\\u001b[31m-    //  totalDays: 0\\u001b[m\\n\\u001b[31m-    //};\\u001b[m\\n\\u001b[31m-    //let current = {};\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //streaks.forEach((streak) =\\u003e {\\u001b[m\\n\\u001b[31m-    //  if (streak.totalDays \\u003e= longest.totalDays) {\\u001b[m\\n\\u001b[31m-    //    longest = streak;\\u001b[m\\n\\u001b[31m-    //  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //  if (moment().diff(streak.endDate, \\"days\\") === 0) {\\u001b[m\\n\\u001b[31m-    //    current = streak;\\u001b[m\\n\\u001b[31m-    //  }\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return {\\u001b[m\\n\\u001b[31m-    //  longest,\\u001b[m\\n\\u001b[31m-    //  current\\u001b[m\\n\\u001b[31m-    //};\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to streak\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class StreakSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = streak;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to calendar\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class CalendarSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = calendar;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  static getDaysBetweenDate(self, dates) {\\u001b[m\\n\\u001b[31m-    let days = SOAssambler.database.exec(CalendarSO.statements.betweenDate, [\\u001b[m\\n\\u001b[31m-      dates.from,\\u001b[m\\n\\u001b[31m-      dates.to\\u001b[m\\n\\u001b[31m-    ]);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    return days;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  static getBusiestDay(dates) {\\u001b[m\\n\\u001b[31m-    let response = SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-      CalendarSO.statements.busiestDayBetweenDate,\\u001b[m\\n\\u001b[31m-      [dates.from, dates.to]\\u001b[m\\n\\u001b[31m-    )[0];\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    return response;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  static getCalendar(dates) {\\u001b[m\\n\\u001b[31m-    let calendar = helper.calendar.generateCalendarStructure(\\u001b[m\\n\\u001b[31m-      dates.from,\\u001b[m\\n\\u001b[31m-      dates.to\\u001b[m\\n\\u001b[31m-    );\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    calendar.weeks.forEach((week) =\\u003e {\\u001b[m\\n\\u001b[31m-      week.days.forEach((day) =\\u003e {\\u001b[m\\n\\u001b[31m-        let entries = SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          CalendarSO.statements.dayByDate,\\u001b[m\\n\\u001b[31m-          [day.date]\\u001b[m\\n\\u001b[31m-        );\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        let total = 0;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        if (entries.length \\u003e 0) {\\u001b[m\\n\\u001b[31m-          let selectedDay = entries[0];\\u001b[m\\n\\u001b[31m-          total = selectedDay.total;\\u001b[m\\n\\u001b[31m-        }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        day.total = total;\\u001b[m\\n\\u001b[31m-      });\\u001b[m\\n\\u001b[31m-    });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    try {\\u001b[m\\n\\u001b[31m-      let busiestDay = CalendarSO.getBusiestDay(dates);\\u001b[m\\n\\u001b[31m-      helper.calendar.fillCalendarWithColors(calendar, busiestDay.total);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-      return calendar;\\u001b[m\\n\\u001b[31m-    } catch {\\u001b[m\\n\\u001b[31m-      return {\\u001b[m\\n\\u001b[31m-        success: false,\\u001b[m\\n\\u001b[31m-        message: \\"Check for data in the calendar table.\\"\\u001b[m\\n\\u001b[31m-      };\\u001b[m\\n\\u001b[31m-    }\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Abstract Methods\\u001b[m\\n\\u001b[31m-  createContribution(fields) {\\u001b[m\\n\\u001b[31m-    //\\u003e Usage\\u001b[m\\n\\u001b[31m-    // Create a contribution within a calendar entry.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //let contribution = Contribution.objects.create({\\u001b[m\\n\\u001b[31m-    //  id: fields.id,\\u001b[m\\n\\u001b[31m-    //  repoUrl: fields.repoUrl,\\u001b[m\\n\\u001b[31m-    //  datetime: fields.datetime,\\u001b[m\\n\\u001b[31m-    //  nameWithOwner: fields.nameWithOwner,\\u001b[m\\n\\u001b[31m-    //  type: fields.type,\\u001b[m\\n\\u001b[31m-    //  calendarId: this.id\\u001b[m\\n\\u001b[31m-    //});\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    //return contribution;\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A statement object with connection to contribution\\u001b[m\\n\\u001b[31m- * sql statements.\\u001b[m\\n\\u001b[31m- * Currently the contribution statement object is not\\u001b[m\\n\\u001b[31m- * fully developed due to it is not used yet.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class ContributionSO extends BaseSO {\\u001b[m\\n\\u001b[31m-  //\\u003e Fields\\u001b[m\\n\\u001b[31m-  static statements = contribution;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Constructor\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    super();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-export {\\u001b[m\\n\\u001b[31m-  PlatformSO,\\u001b[m\\n\\u001b[31m-  MemberSO,\\u001b[m\\n\\u001b[31m-  RepositorySO,\\u001b[m\\n\\u001b[31m-  RepositoryHasMemberSO,\\u001b[m\\n\\u001b[31m-  LanguageSO,\\u001b[m\\n\\u001b[31m-  PlatformHasRepositorySO,\\u001b[m\\n\\u001b[31m-  OrganizationSO,\\u001b[m\\n\\u001b[31m-  OrganizationHasMemberSO,\\u001b[m\\n\\u001b[31m-  PlatformHasOrganizationSO,\\u001b[m\\n\\u001b[31m-  StatisticSO,\\u001b[m\\n\\u001b[31m-  StreakSO,\\u001b[m\\n\\u001b[31m-  CalendarSO,\\u001b[m\\n\\u001b[31m-  ContributionSO\\u001b[m\\n\\u001b[31m-};\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[31m- * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n"},{"insertions":"300","deletions":"0","path":"src/reducer/database/osm/models.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32mimport { SOAssambler } from \\"./reconstructor\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as platform from \\"./statements/platform\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as member from \\"./statements/member\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as repository from \\"./statements/repository\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as repositoryHasMember from \\"./statements/repositoryHasMember\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as platformHasRepository from \\"./statements/platformHasRepository\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as language from \\"./statements/language\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as organization from \\"./statements/organization\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as organizationHasMember from \\"./statements/organizationHasMember\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as platformHasOrganization from \\"./statements/platformHasOrganization\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as statistic from \\"./statements/statistic\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as streak from \\"./statements/streak\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as calendar from \\"./statements/calendar\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as contribution from \\"./statements/contribution\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Statement Objects =\\u003e SO\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as helper from \\"../helper\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport class BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  //static objects = SOAssambler;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getObjects(self: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return new SOAssambler(self);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  render(filter: string[]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return helper.general.squeezer(this, filter);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass PlatformSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = platform;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createRepository(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createOrganization(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createStatistic(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getOrganizations(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getRepositories(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getStatistics(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getLowestCreatedAtYear() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      PlatformSO.statements.lowestCreatedAtYear\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    )[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass MemberSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = member;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass RepositorySO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = repository;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createMember(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createLanguage(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getMembers() {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getLanguages(cls:any, self:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let response = cls.objects.custom(language.byRepository(self.id));\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass RepositoryHasMemberSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = repositoryHasMember;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass LanguageSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = language;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getLanguages() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return SOAssambler.database.exec(LanguageSO.statements.merged);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass PlatformHasRepositorySO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = platformHasRepository;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass OrganizationSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = organization;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createMember(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getMembers(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getRepositories(cls:any, self:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let response = cls.objects.filter(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        owner: self.name\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      cls,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      repository.withOwner\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    );\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass OrganizationHasMemberSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = organizationHasMember;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass PlatformHasOrganizationSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = platformHasOrganization;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass StatisticSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = statistic;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createStreak(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getStreaks() {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getMerged(cls: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let response = SOAssambler.database.exec(StatisticSO.statements.allMerged);\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    // Parse to class objects\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    response = response.map((entry:any) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return new cls(entry);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  getContributions(self:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    if (self.id) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // If valid object\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // maybe merged object?\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      response = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        commit: SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          StatisticSO.statements.commitContributionsOfYear,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [self.year]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        )[0],\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        issue: SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          StatisticSO.statements.issueContributionsOfYear,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [self.year]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        )[0],\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        pullRequest: SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          StatisticSO.statements.issueContributionsOfYear,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [self.year]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        )[0],\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        pullRequestReview: SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          StatisticSO.statements.pullRequestReviewContributionsOfYear,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [self.year]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        )[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass StreakSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = streak;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass CalendarSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = calendar;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  createContribution(fields:any) {}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getDaysBetweenDate(self:any, dates:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let days = SOAssambler.database.exec(CalendarSO.statements.betweenDate, [\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      dates.from,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      dates.to\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    ]);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return days;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getBusiestDay(dates:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let response = SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      CalendarSO.statements.busiestDayBetweenDate,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      [dates.from, dates.to]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    )[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static getCalendar(dates:any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    // generate calendar\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    let calendar = helper.calendar.generateCalendarStructure(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      dates.from,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      dates.to\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    // fill totals\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    calendar.weeks.forEach((week) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      week.days.forEach((day) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        let entries = SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          CalendarSO.statements.dayByDate,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [day.date]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        //let entries = db.exec(query, [day.date]);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        let total = 0;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if (entries.length \\u003e 0) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          let selectedDay = entries[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          total = selectedDay.total;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        day.total = total;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let busiestDay = CalendarSO.getBusiestDay(dates);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let busiestDayTotal = 0;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if(busiestDay){\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        busiestDayTotal = busiestDay.total;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      helper.calendar.fillCalendarWithColors(calendar, busiestDayTotal);\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return calendar;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch(err){\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      console.error(err);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: \\"Check for data in the calendar table.\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass ContributionSO extends BaseSO {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static statements = contribution;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    super();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  PlatformSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  MemberSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  RepositorySO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  RepositoryHasMemberSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  LanguageSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  PlatformHasRepositorySO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  OrganizationSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  OrganizationHasMemberSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  PlatformHasOrganizationSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  StatisticSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  StreakSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  CalendarSO,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  ContributionSO\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m};\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"},{"insertions":"0","deletions":"153","path":"src/reducer/database/osm/reconstructor.js","raw_changes":"\\u001b[31m-//\\u003e AlaSQL\\u001b[m\\n\\u001b[31m-// JavaScript SQL database for browser and Node.js.\\u001b[m\\n\\u001b[31m-import alasql from \\"alasql\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Classes\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * A tool to hand over basic osm operations\\u001b[m\\n\\u001b[31m- * (init, create, get, all, filter, custom) for\\u001b[m\\n\\u001b[31m- * all statement objects to the database.\\u001b[m\\n\\u001b[31m- * Alasql is used as database.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class SOAssambler {\\u001b[m\\n\\u001b[31m-  static database = new alasql.Database();\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  constructor(Base) {\\u001b[m\\n\\u001b[31m-    if (Base.statements.initialize) {\\u001b[m\\n\\u001b[31m-      // Create table\\u001b[m\\n\\u001b[31m-      SOAssambler.database.exec(Base.statements.initialize);\\u001b[m\\n\\u001b[31m-    }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-    this.create = (fields) =\\u003e {\\u001b[m\\n\\u001b[31m-      try {\\u001b[m\\n\\u001b[31m-        let tablename = new Base({}).constructor.name.toLowerCase();\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          Base.statements.create,\\u001b[m\\n\\u001b[31m-          Object.values(fields)\\u001b[m\\n\\u001b[31m-        );\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        fields.id = SOAssambler.database.autoval(tablename, \\"id\\");\\u001b[m\\n\\u001b[31m-        let obj = new Base(fields);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        return obj;\\u001b[m\\n\\u001b[31m-      } catch (err) {\\u001b[m\\n\\u001b[31m-        return {\\u001b[m\\n\\u001b[31m-          success: false,\\u001b[m\\n\\u001b[31m-          message: err.message\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.get = (fields) =\\u003e {\\u001b[m\\n\\u001b[31m-      try {\\u001b[m\\n\\u001b[31m-        let response = SOAssambler.database.exec(\\u001b[m\\n\\u001b[31m-          Base.statements.get,\\u001b[m\\n\\u001b[31m-          Object.values(fields)\\u001b[m\\n\\u001b[31m-        );\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        if (response.length === 1) {\\u001b[m\\n\\u001b[31m-          response = response[0];\\u001b[m\\n\\u001b[31m-        }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        let obj = new Base(response);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        return obj;\\u001b[m\\n\\u001b[31m-      } catch (err) {\\u001b[m\\n\\u001b[31m-        return {\\u001b[m\\n\\u001b[31m-          success: false,\\u001b[m\\n\\u001b[31m-          message: err.message\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.all = (...fields) =\\u003e {\\u001b[m\\n\\u001b[31m-      try {\\u001b[m\\n\\u001b[31m-        let response;\\u001b[m\\n\\u001b[31m-        response = SOAssambler.database.exec(Base.statements.all, fields);\\u001b[m\\n\\u001b[31m-        response = response.map((entry) =\\u003e {\\u001b[m\\n\\u001b[31m-          return new Base(entry);\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        return response;\\u001b[m\\n\\u001b[31m-      } catch (err) {\\u001b[m\\n\\u001b[31m-        return {\\u001b[m\\n\\u001b[31m-          success: false,\\u001b[m\\n\\u001b[31m-          message: err.message\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.filter = (filter, Cls, filterStatement) =\\u003e {\\u001b[m\\n\\u001b[31m-      try {\\u001b[m\\n\\u001b[31m-        if (!filterStatement) {\\u001b[m\\n\\u001b[31m-          filterStatement = Base.statements.all;\\u001b[m\\n\\u001b[31m-        }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        let response = SOAssambler.database.exec(filterStatement);\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        for (let entry in response) {\\u001b[m\\n\\u001b[31m-          if ({}.hasOwnProperty.call(response, entry)) {\\u001b[m\\n\\u001b[31m-            for (let f in filter) {\\u001b[m\\n\\u001b[31m-              if ({}.hasOwnProperty.call(filter, f)) {\\u001b[m\\n\\u001b[31m-                if (response[entry]) {\\u001b[m\\n\\u001b[31m-                  if (filter[f] !== response[entry][f]) {\\u001b[m\\n\\u001b[31m-                    delete response[entry];\\u001b[m\\n\\u001b[31m-                  }\\u001b[m\\n\\u001b[31m-                }\\u001b[m\\n\\u001b[31m-              }\\u001b[m\\n\\u001b[31m-            }\\u001b[m\\n\\u001b[31m-          }\\u001b[m\\n\\u001b[31m-        }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        var filtered = response.filter((el) =\\u003e {\\u001b[m\\n\\u001b[31m-          return el !== null;\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        let objects = filtered.map((entry) =\\u003e {\\u001b[m\\n\\u001b[31m-          let o;\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-          if (Cls) {\\u001b[m\\n\\u001b[31m-            o = new Cls(entry);\\u001b[m\\n\\u001b[31m-          } else {\\u001b[m\\n\\u001b[31m-            o = new Base(entry);\\u001b[m\\n\\u001b[31m-          }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-          return o;\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        return objects;\\u001b[m\\n\\u001b[31m-      } catch (err) {\\u001b[m\\n\\u001b[31m-        return {\\u001b[m\\n\\u001b[31m-          success: false,\\u001b[m\\n\\u001b[31m-          response: null,\\u001b[m\\n\\u001b[31m-          message: err.message\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    this.custom = (query) =\\u003e {\\u001b[m\\n\\u001b[31m-      try {\\u001b[m\\n\\u001b[31m-        let response = SOAssambler.database.exec(query);\\u001b[m\\n\\u001b[31m-        response = response.map((entry) =\\u003e {\\u001b[m\\n\\u001b[31m-          return new Base(entry);\\u001b[m\\n\\u001b[31m-        });\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-        return response;\\u001b[m\\n\\u001b[31m-      } catch (err) {\\u001b[m\\n\\u001b[31m-        return {\\u001b[m\\n\\u001b[31m-          success: false,\\u001b[m\\n\\u001b[31m-          message: err.message\\u001b[m\\n\\u001b[31m-        };\\u001b[m\\n\\u001b[31m-      }\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-  //\\u003e Methods\\u001b[m\\n\\u001b[31m-  reload() {\\u001b[m\\n\\u001b[31m-    SOAssambler.database = new alasql.Database();\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-export { SOAssambler };\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[31m- * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n"},{"insertions":"142","deletions":"0","path":"src/reducer/database/osm/reconstructor.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32mvar alasql = require(\'alasql\');\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mclass SOAssambler {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  static database = new alasql.Database();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  constructor(private Base: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    if (Base.statements.initialize) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // Create table\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // console.log(SOAssambler.database)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      // console.log(base.statements.initialize)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      SOAssambler.database.exec(Base.statements.initialize);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    // The fields have to be in the correct order!\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  create(fields: any, optCls?: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let tablename = new this.Base({}).constructor.name.toLowerCase();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        this.Base.statements.create,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        Object.values(fields)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      fields.id = SOAssambler.database.autoval(tablename, \\"id\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let obj = new this.Base(fields);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return obj;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch (err) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: err.message\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  get(fields: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let response = SOAssambler.database.exec(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        this.Base.statements.get,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        Object.values(fields)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      console.log({ ...response });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (response.length === 1) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        response = response[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let obj = new this.Base(response);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return obj;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch (err) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: err.message\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  all(...fields: any[]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      response = SOAssambler.database.exec(this.Base.statements.all, fields);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      console.log(response);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      response = response.map((entry: any) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        return new this.Base(entry);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch (err) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: err.message\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  filter(filter: any, Cls?: any, filterStatement?: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (!filterStatement) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        filterStatement = this.Base.statements.all;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let response = SOAssambler.database.exec(filterStatement);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      for (let entry in response) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if ({}.hasOwnProperty.call(response, entry)) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          for (let f in filter) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            if ({}.hasOwnProperty.call(filter, f)) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              if (response[entry]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                if (filter[f] !== response[entry][f]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  delete response[entry];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      var filtered = response.filter((el: any) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        return el != null;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let objects = filtered.map((entry: any) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        let o;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if (Cls) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          o = new Cls(entry);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          o = new this.Base(entry);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        return o;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return objects;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch (err) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        response: null,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: err.message\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  custom(query: any) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    try {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let response = SOAssambler.database.exec(query);\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      response = response.map((entry: any) =\\u003e {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        return new this.Base(entry);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return response;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    } catch (err) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        success: false,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        message: err.message\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  reload() {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    SOAssambler.database = new alasql.Database();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m};\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport { SOAssambler };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"},{"insertions":"1","deletions":"2","path":"src/reducer/database/osm/statements/{calendar.js =\\u003e calendar.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{contribution.js =\\u003e contribution.ts}","raw_changes":""},{"insertions":"3","deletions":"3","path":"src/reducer/database/osm/statements/{language.js =\\u003e language.ts}","raw_changes":""},{"insertions":"2","deletions":"0","path":"src/reducer/database/osm/statements/{member.js =\\u003e member.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{organization.js =\\u003e organization.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{organizationHasMember.js =\\u003e organizationHasMember.ts}","raw_changes":""},{"insertions":"1","deletions":"0","path":"src/reducer/database/osm/statements/{platform.js =\\u003e platform.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{platformHasOrganization.js =\\u003e platformHasOrganization.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{platformHasRepository.js =\\u003e platformHasRepository.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{repository.js =\\u003e repository.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{repositoryHasMember.js =\\u003e repositoryHasMember.ts}","raw_changes":""},{"insertions":"1","deletions":"2","path":"src/reducer/database/osm/statements/{statistic.js =\\u003e statistic.ts}","raw_changes":""},{"insertions":"0","deletions":"0","path":"src/reducer/database/osm/statements/{streak.js =\\u003e streak.ts}","raw_changes":""},{"insertions":"4","deletions":"11","path":"src/reducer/helper/{calendar.js =\\u003e calendar.ts}","raw_changes":""},{"insertions":"0","deletions":"2","path":"src/reducer/helper/{index.js =\\u003e index.ts}","raw_changes":""},{"insertions":"2","deletions":"8","path":"src/reducer/helper/{language.js =\\u003e language.ts}","raw_changes":""},{"insertions":"8","deletions":"15","path":"src/reducer/helper/{profile.js =\\u003e profile.ts}","raw_changes":""},{"insertions":"10","deletions":"8","path":"src/reducer/helper/{statistic.js =\\u003e statistic.ts}","raw_changes":""},{"insertions":"0","deletions":"35","path":"src/reducer/index.js","raw_changes":"\\u001b[31m-//\\u003e Database Models\\u001b[m\\n\\u001b[31m-// Contains all database models\\u001b[m\\n\\u001b[31m-import * as models from \\"./database/models\\";\\u001b[m\\n\\u001b[31m-//\\u003e Helper\\u001b[m\\n\\u001b[31m-// Contains all database helper functions\\u001b[m\\n\\u001b[31m-import * as helper from \\"./helper\\";\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-//\\u003e Classes\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * Providing model data using helper classes.\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n\\u001b[31m-class Reducer {\\u001b[m\\n\\u001b[31m-  constructor() {\\u001b[m\\n\\u001b[31m-    // Merging All Entries\\u001b[m\\n\\u001b[31m-    this.get = () =\\u003e {\\u001b[m\\n\\u001b[31m-      return {\\u001b[m\\n\\u001b[31m-        profile: helper.profile.mergedProfile(),\\u001b[m\\n\\u001b[31m-        calendar: helper.calendar.mergedCalendar(),\\u001b[m\\n\\u001b[31m-        statistic: helper.statistic.mergedStatistic(),\\u001b[m\\n\\u001b[31m-        language: helper.language.mergedLanguage()\\u001b[m\\n\\u001b[31m-      };\\u001b[m\\n\\u001b[31m-    };\\u001b[m\\n\\u001b[31m-    // Get Last Added Values\\u001b[m\\n\\u001b[31m-    this.getRecent = () =\\u003e {};\\u001b[m\\n\\u001b[31m-    // Merging By Source\\u001b[m\\n\\u001b[31m-    this.getBySource = (source) =\\u003e {};\\u001b[m\\n\\u001b[31m-  }\\u001b[m\\n\\u001b[31m-}\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-export { Reducer, models };\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-/**\\u001b[m\\n\\u001b[31m- * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[31m- * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[31m- */\\u001b[m\\n"},{"insertions":"20","deletions":"0","path":"src/reducer/index.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32mimport * as models from \\"./database/models\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as helper from \\"./helper\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport class Reducer{\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  get(){\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    return {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      profile: helper.profile.mergedProfile(),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      calendar: helper.calendar.mergedCalendar(),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      statistic: helper.statistic.mergedStatistic(),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      language: helper.language.mergedLanguage(),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport { models };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © 2019 Werbeagentur Christian Aichner\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"},{"insertions":"43","deletions":"45","path":"src/utils/github/{converter.js =\\u003e converter.ts}","raw_changes":""},{"insertions":"0","deletions":"4","path":"src/utils/github/{index.js =\\u003e index.ts}","raw_changes":""},{"insertions":"9","deletions":"11","path":"src/utils/github/queries/{data.js =\\u003e data.ts}","raw_changes":""},{"insertions":"6","deletions":"16","path":"src/utils/github/queries/{index.js =\\u003e index.ts}","raw_changes":""},{"insertions":"28","deletions":"0","path":"tsconfig.json","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m{\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  \\"compilerOptions\\": {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"target\\": \\"es5\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"module\\": \\"esnext\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"declaration\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"outDir\\": \\"lib\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"removeComments\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"strict\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"esModuleInterop\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"forceConsistentCasingInFileNames\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"lib\\": [\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      \\"dom\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      \\"dom.iterable\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      \\"esnext\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    ],\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"allowJs\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"skipLibCheck\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"allowSyntheticDefaultImports\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"moduleResolution\\": \\"node\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"resolveJsonModule\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"isolatedModules\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"noEmit\\": true,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"jsx\\": \\"react\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  \\"include\\": [\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"src/**/*\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  ]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n"}]},{"commit":"743affe1cd86d8007e1d10fb15a5d5e3e74215e2","author":"schettn \\u003cnicoschett@icloud.com\\u003e","date":"Tue Apr 7 20:19:50 2020 +0200","message":"Add-packages","files":[{"insertions":"2","deletions":"1","path":"package.json","raw_changes":"\\u001b[31m-    \\"react-scripts\\": \\"^3.3.1\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"moment\\": \\"^2.24.0\\",\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"typescript\\": \\"^3.8.3\\"\\u001b[m\\n"}]},{"commit":"d5fe8b4b0ab57739f143e8facc9f79d996b6da87","author":"schettn \\u003cnicoschett@icloud.com\\u003e","date":"Tue Apr 7 20:18:53 2020 +0200","message":"Add-exports","files":[{"insertions":"9","deletions":"0","path":"src/utils/gitlab/index.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32mimport * as paths from \'./paths\';\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as converter from \'./converter\';\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport { paths, converter };\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © Simon Prast\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"}]},{"commit":"86a9465a852cf793a6eb47b2f11156e228299538","author":"schettn \\u003cnicoschett@icloud.com\\u003e","date":"Tue Apr 7 20:18:32 2020 +0200","message":"Add-converter-for-scraped-data","files":[{"insertions":"426","deletions":"0","path":"src/utils/gitlab/converter.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Imports\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains all reducer database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport * as models from \\"../../reducer/database/models\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains momentJS\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport moment from \\"moment\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32minterface IScrapedData {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  platform: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    url: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    name: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  home: Document;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  atom?: Document;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  currentCalendar: { [index: string]: number };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  groups: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    html: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  projects: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    html: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  activity: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    html: string;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Converter for data from the scraper.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m *\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * @param rawData Data to be processed. Must fit IScrapedData format.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * @description Fill the database with data provided by \\"rawData\\".\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport function runScraper(rawData: IScrapedData) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Extract platform data from rawData.home document.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let platformName = rawData.home.querySelectorAll(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \'[property=\\"og:site_name\\"]\'\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  )[0].attributes[0].value;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let platformUrl = rawData.platform.url;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let avatarUrl =\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    platformUrl +\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    rawData.home.querySelectorAll(\'[property=\\"og:image\\"]\')[0].attributes[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      .value;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let websiteUrl = rawData.home.querySelectorAll(\'[property=\\"og:url\\"]\')[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .attributes[0].value;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let username = rawData.home\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .querySelectorAll(\'[data-action=\\"overview\\"]\')[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .getAttribute(\\"href\\")\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    ?.slice(1);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let fullName = rawData.home.querySelectorAll(\'[property=\\"og:title\\"]\')[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .attributes[0].value;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let createdAt = moment(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    new Date(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      rawData.home\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"user-info\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByTagName(\\"p\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByTagName(\\"span\\")[1].innerHTML\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    )\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  ).format();\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let status = rawData.home.getElementsByClassName(\\"cover-status\\")[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let statusMessage = status?.lastChild?.textContent;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let statusEmojiHTML = status?.getElementsByTagName(\\"gl-emoji\\")[0].outerHTML;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Create a platform with the associated platform data.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let platform = models.Platform.objects.create({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    platformName,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    platformUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    avatarUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    websiteUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    company: null,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    email: null,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    username,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    fullName,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    createdAt,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    location: null,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    statusMessage,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    statusEmojiHTML,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  });\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Extract organization data from rawData.groups.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let groups = new DOMParser().parseFromString(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    rawData.groups.html,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"text/html\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  );\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let groupList = groups\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .getElementsByClassName(\\"content-list\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    ?.getElementsByTagName(\\"li\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  if (groupList) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let index = 0; index \\u003c groupList.length; index++) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      const element = groupList[index];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select avatar.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Set null if no image is set.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let avatarUrl = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"avatar-container\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByTagName(\\"img\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        ?.getAttribute(\\"data-src\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (avatarUrl) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl = platformUrl + avatarUrl;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl = null;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select url and name.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let nameElement = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"title\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"group-name\\")[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let url = platformUrl + nameElement.getAttribute(\\"href\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let name = nameElement.getAttribute(\\"href\\")?.slice(1);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let fullName = nameElement.innerHTML;\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Create a organization within the platform.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      platform.createOrganization({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        url,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        fullname: fullName,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Extract repository data from rawData.projects.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let projects = new DOMParser().parseFromString(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    rawData.projects.html,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"text/html\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let projectsList = projects\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    .getElementsByClassName(\\"projects-list\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    ?.getElementsByTagName(\\"li\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  if (projectsList) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let index = 0; index \\u003c projectsList.length; index++) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      const element = projectsList[index];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select avatar.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Set null if no image is set.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let avatarUrl = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"avatar-container\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByTagName(\\"img\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        ?.getAttribute(\\"data-src\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (avatarUrl) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl = platformUrl + avatarUrl;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl = null;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select url and name.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let nameElement = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"avatar-container\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByTagName(\\"a\\")[0];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let url = platformUrl + nameElement.getAttribute(\\"href\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let name = nameElement.getAttribute(\\"href\\")?.slice(1);\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Create a repository within the platform.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      platform.createRepository({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        avatarUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        url,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        owner_id: null,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Extract activity list from from rawData.activity.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let events = new DOMParser().parseFromString(\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    rawData.activity.html,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    \\"text/html\\"\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  );\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let eventList = events.getElementsByClassName(\\"event-item\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  interface CalendarDays {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    [date: string]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      contributions: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        [type: string]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          [datetime: string]: { total: number; name: string; repoUrl: string };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      total: number;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  interface Statistic {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    [year: number]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      [type: string]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        total: number;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let days: CalendarDays = {};\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  let stats: Statistic = {};\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   * Check whether there are contributions(events) or not.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m   */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  if (eventList) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     * Loop trough every item in the event list.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     * Extract contribution data from element.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let index = 0; index \\u003c eventList.length; index++) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      const element = eventList[index];\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Define the contribution types.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let type: string = \\"undefined\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (element.innerHTML.toLowerCase().includes(\\"pushed\\")) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        type = \\"commit\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else if (element.innerHTML.toLowerCase().includes(\\"opened\\")) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        type = \\"issue\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else if (element.innerHTML.toLowerCase().includes(\\"merge branch\\")) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        type = \\"pullRequest\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else if (element.innerHTML.toLowerCase().includes(\\"created project\\")) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        type = \\"create\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select date\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let date = moment(element.getElementsByTagName(\\"time\\")[0].dateTime);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select repository name contributed to.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let name = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"event-scope\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        ?.getElementsByTagName(\\"a\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getAttribute(\\"href\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (!name) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        name = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          .getElementsByClassName(\\"event-title\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          .getElementsByTagName(\\"a\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          .getAttribute(\\"href\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if (!name) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          name = \\"\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Select the \\"and n more commits\\" and set the default contribution number.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let moreCommitText = element\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        .getElementsByClassName(\\"commits-stat\\")[0]\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        ?.getElementsByTagName(\\"span\\")[0].innerText;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let contributionCount = 1;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (moreCommitText) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        let moreCommitsCount = moreCommitText.match(/\\\\d/g)?.join(\\"\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if (moreCommitsCount) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          contributionCount += parseInt(moreCommitsCount);\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Format date and datetime to string.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let dateStr = date.format(\\"YYYY-MM-DD\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let datetimeStr = date.format(\\"YYYY-MM-DDTHH:mm:ss\\");\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Code review reminder!:\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Please check this code block and improve it when needed.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      //\\u003e ###############BEGIN CHECK CODE###############\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (!days[dateStr]?.contributions?.[`${type}`]?.datetimeStr) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        if (days[dateStr]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          if (days[dateStr].contributions) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            if (days[dateStr].contributions[`${type}`]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              days[dateStr].contributions[`${type}`][datetimeStr] = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                name: name.slice(1),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                repoUrl: platformUrl + name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              days[dateStr].contributions[`${type}`] = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                [datetimeStr]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  name: name.slice(1),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  repoUrl: platformUrl + name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            days[dateStr].total += contributionCount;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            days[dateStr] = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              contributions: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                [`${type}`]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  [datetimeStr]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                    total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                    name: name.slice(1),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                    repoUrl: platformUrl + name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        } else {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          days[dateStr] = {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            contributions: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              [`${type}`]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                [datetimeStr]: {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  name: name.slice(1),\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                  repoUrl: platformUrl + name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m                },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m              },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            },\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            total: contributionCount,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Set the total contribution per type.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (!stats[date.year()]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        stats[date.year()] = { [`${type}`]: { total: 0 } };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      } else if (!stats[date.year()][`${type}`]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        stats[date.year()][`${type}`] = { total: 0 };\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      stats[date.year()][`${type}`].total += contributionCount;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     * Process days and create calendarEntries and contributions.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let date in days) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Create calendarEntry.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      let calendarDay = platform.createCalendarEntry({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        date: date,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        total: days[date].total,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Create contribution.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      for (let type in days[date].contributions) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m         * Create multiple contributions if they were contributed on the same datetime.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m         */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        for (let datetime in days[date].contributions[type]) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          calendarDay.createContribution({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            repoUrl: days[date].contributions[type][datetime].repoUrl,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            datetime,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            nameWithOwner: days[date].contributions[type][datetime].name,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            type: type,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     * Process stats and create statistics.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m     */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    for (let year in stats) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      /**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       * Set whole year to current year if the year matches today.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m       */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      if (year === new Date().getFullYear().toString()) {\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        platform.createStatistic({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          year: 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalIssueContributions: stats[year][\\"issue\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            ? stats[year][\\"issue\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalCommitContributions: stats[year][\\"commit\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            ? stats[year][\\"commit\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalRepositoryContributions: stats[year][\\"create\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            ? stats[year][\\"create\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalPullRequestContributions: stats[year][\\"pullRequest\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            ? stats[year][\\"pullRequest\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m            : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalPullRequestReviewContributions: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalRepositoriesWithContributedIssues: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalRepositoriesWithContributedCommits: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          totalRepositoriesWithContributedPullRequests: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      platform.createStatistic({\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        year,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalIssueContributions: stats[year][\\"issue\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          ? stats[year][\\"issue\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalCommitContributions: stats[year][\\"commit\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          ? stats[year][\\"commit\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalRepositoryContributions: stats[year][\\"create\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          ? stats[year][\\"create\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalPullRequestContributions: stats[year][\\"pullRequest\\"]?.total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          ? stats[year][\\"pullRequest\\"].total\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m          : 0,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalPullRequestReviewContributions: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalRepositoriesWithContributedIssues: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalRepositoriesWithContributedCommits: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m        totalRepositoriesWithContributedPullRequests: 0, // currently not provided by Gitlab\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m      });\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e ###############END CHECK CODE###############\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  }\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m}\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * SPDX-License-Identifier: (EUPL-1.2)\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Copyright © Simon Prast\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n"}]},{"commit":"ffa1b3018c90feca45efb11cd9fdcda02c95bdcd","author":"schettn \\u003cnicoschett@icloud.com\\u003e","date":"Tue Apr 7 20:17:08 2020 +0200","message":"Add-gitlab-scraper-paths","files":[{"insertions":"10","deletions":"0","path":"src/utils/gitlab/paths.ts","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Define Gitlab website paths.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m */\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mconst root = \\"/\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const home = (username: string) =\\u003e root + \\"users/\\" + username;\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const currentCalendar = (username: string) =\\u003e home(username) + \\"/calendar\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const activity = (username: string) =\\u003e root + username + \\"?limit=2147483647\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const atom = (username: string) =\\u003e root + username + \\".atom?limit=2147483647\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const groups = (username: string) =\\u003e home(username) + \\"/groups.json\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mexport const projects = (username: string) =\\u003e home(username) + \\"/projects.json\\";\\u001b[m\\n"}]},{"commit":"26db895c206031fe58196ed68ec48ecf4d642c34","author":"Florian Kleber \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 23:16:37 2020 +0200","message":"Merge-pull-request-17-from-snek-at-add-intel-1","files":[{"insertions":"1","deletions":"0","path":"src/client.js","raw_changes":""},{"insertions":"2","deletions":"1","path":"src/index.js","raw_changes":""}]},{"commit":"d43064231c78dfc14aceebd0223d306e6edd3ef1","author":"Florian Kleber \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 23:14:47 2020 +0200","message":"Merge-pull-request-16-from-snek-at-add-utils-github-1","files":null},{"commit":"19e65dc69428371f5b1c4b9a34376f3a1a076d6c","author":"Florian Kleber \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 23:12:26 2020 +0200","message":"Merge-pull-request-15-from-snek-at-add-reducer-2","files":null},{"commit":"656878313ca758d29c1bbda8e3036e6309483602","author":"kleberbaum \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 15:09:52 2020 +0200","message":"Improve-code-quality","files":null},{"commit":"7522c5251d5aa23367d44a01f06c247993ad84ea","author":"kleberbaum \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 14:27:25 2020 +0200","message":"Improve-code-quality","files":[{"insertions":"3","deletions":"1","path":"src/client.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e snek-client\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A Graphql and REST client for fetching data\\u001b[m\\n\\u001b[31m- * Implementation of the snek-client.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Implementation of the snek-client\\u001b[m\\n"},{"insertions":"5","deletions":"3","path":"src/index.js","raw_changes":"\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\n"}]},{"commit":"9fefd1169353088b02b8e9873b1aa5a1c65b8b36","author":"kleberbaum \\u003ckleberbaum@erebos.xyz\\u003e","date":"Mon Mar 30 10:14:57 2020 +0200","message":"Improve-code-quality","files":[{"insertions":"6","deletions":"2","path":"src/utils/github/converter.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[31m-\\u001b[m\\n\\u001b[32m+\\u001b[m\\n"},{"insertions":"5","deletions":"1","path":"src/utils/github/queries/index.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport moment from \\"moment\\";\\u001b[m\\n\\u001b[31m-// Contains raw static queries \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains raw static queries\\u001b[m\\n"}]},{"commit":"8543a31ab14f83dbfbd4bfe2f30b3024e4f216ba","author":"kleberbaum \\u003ckleberbaum@erebos.xyz\\u003e","date":"Tue Mar 17 14:10:02 2020 +0100","message":"Improve-code-quality","files":[{"insertions":"1","deletions":"1","path":"src/reducer/database/models.js","raw_changes":"\\u001b[31m-  //\\u003e Static methods\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m  //\\u003e Static Methods\\u001b[m\\n"},{"insertions":"18","deletions":"18","path":"src/reducer/database/osm/models.js","raw_changes":"\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n\\u001b[31m-    //\\u003e Implementation example\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m    //\\u003e Implementation Example\\u001b[m\\n"},{"insertions":"3","deletions":"2","path":"src/reducer/helper/calendar.js","raw_changes":"\\u001b[31m-// A lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[31m-//\\u003e Database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Database Models\\u001b[m\\n"},{"insertions":"1","deletions":"1","path":"src/reducer/helper/language.js","raw_changes":"\\u001b[31m-//\\u003e Database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Database Models\\u001b[m\\n"},{"insertions":"1","deletions":"1","path":"src/reducer/helper/profile.js","raw_changes":"\\u001b[31m-//\\u003e Database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Database Models\\u001b[m\\n"},{"insertions":"2","deletions":"2","path":"src/reducer/helper/statistic.js","raw_changes":"\\u001b[31m-//\\u003e Database models\\u001b[m\\n\\u001b[31m-// Contains all database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Database Models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains all database Models\\u001b[m\\n"},{"insertions":"2","deletions":"1","path":"src/reducer/index.js","raw_changes":"\\u001b[31m-//\\u003e Database models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Database Models\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Classes\\u001b[m\\n"}]},{"commit":"e7507b25f339d7fa1b4026e60c117056151ec118","author":"kleberbaum \\u003ckleberbaum@erebos.xyz\\u003e","date":"Tue Mar 17 13:04:53 2020 +0100","message":"Improve-code-quality","files":[{"insertions":"5","deletions":"2","path":"src/reducer/database/helper/calendar.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[31m-/** \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[31m- * Fill calendar structure with the correct colors \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * Fill calendar structure with the correct colors\\u001b[m\\n"},{"insertions":"3","deletions":"0","path":"src/reducer/database/helper/statistic.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n"},{"insertions":"6","deletions":"2","path":"src/reducer/database/models.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing,\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport moment from \\"moment\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[31m-// Contains all models \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// Contains all models\\u001b[m\\n\\u001b[31m-import moment from \\"moment\\";\\u001b[m\\n"},{"insertions":"15","deletions":"14","path":"src/reducer/database/osm/models.js","raw_changes":"\\u001b[31m-/*\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * Comment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * A statement object with connection to member\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m-/*\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m/**\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n\\u001b[31m- * sql statements. \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * sql statements.\\u001b[m\\n"},{"insertions":"3","deletions":"1","path":"src/reducer/database/osm/reconstructor.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e AlaSQL\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// JavaScript SQL database for browser and Node.js.\\u001b[m\\n\\u001b[31m- * A tool to hand over basic osm operations \\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m * A tool to hand over basic osm operations\\u001b[m\\n"},{"insertions":"4","deletions":"1","path":"src/reducer/helper/calendar.js","raw_changes":"\\u001b[32m+\\u001b[m\\u001b[32m//\\u003e Moment\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32m// A lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\\u001b[m\\n\\u001b[32m+\\u001b[m\\u001b[32mimport moment from \\"moment\\";\\u001b[m\\n\\u001b[32m+\\u001b[m\\n\\u001b[31m-import moment from \\"moment\\";\\u001b[m\\n"}]}]}', 'pipeline_token': '04a4192c-bded-4726-ac08-c1af9473fd7f'}